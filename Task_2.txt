Difference Between Document and Windows objects:
=>In JavaScript, both the window object and the document object are fundamental components of the browser's Document Object Model (DOM),
but they serve different purposes.
A) Window Object:
--------------
 -> The window object represents the browser window or frame that contains the DOM document.
 -> It is the top-level object in client-side JavaScript, and it acts as a global object for the browser's JavaScript environment.
 -> It provides access to various properties and methods related to the browser window, such as size, location, navigation, history, timers, and more.
 -> It serves as a container for other objects like document, navigator, history, location, etc
 -> while the window object represents the browser window or frame and provides access to various browser-related functionalities

Properties of document:
-----------------------
1)activeElement: It returns the currently active elements in the document.
2)body: It returns the contents of the body element.
3)anchors: It returns all <a> elements that have a name attribute.
4)baseURI: It returns a string value that represents the base URI of the document.
5)cookie: It returns the cookie of the current document.
6)charSet: It returns a string, representing the document’s character encoding.
7)defaultView: It returns the current Window Object.
8)designMode: It is used to set documents as editable or read-only.
9)domain: It returns the domain name of the document server.
10)doctype: It returns the document’s doctype.
11)embeds: It returns the collection of all embedded elements.
12)URL: It returns the complete URL of the document.
13)forms: It returns all the elements of the form.

Methods of Document:
--------------------
Syntax:

document.method_name;

-> The lists of most commonly used methods are listed below:

1)addEventListener(): It is used to attach an event handler to the specified element.
2)adoptNode(): It is used to adopt a node from another document and it returns a node object, representing the adopted node.
3)close(): It is used to close the output stream.
4)createAttribute(): It is used to create an attribute node with the specified name and returns the attribute object.
5)createComment(): It is used to create a comment node with some text.
6)createDocumentFragment(): It is used to create the document fragment to change the content of the document.
7)createElement(): It is used to create HTML element .
8)createEvent(): It is used to create a new events object.
9)createTextNode(): It is used to create a textnode.
10)execCommand(): It is used to execute a command specified by the user on the editable selected section. It returns a Boolean value.
 
 B) Document Object:
 -------------------
 -> The document object represents the DOM document loaded in the browser window.
 -> It provides methods and properties to interact with the content of the HTML document, such as accessing elements, modifying content, handling events, and more.
 -> It represents the entire HTML document as a tree structure, where each HTML element is a node in the tree.
 -> It allows manipulation of the document's structure, content, and styling dynamically through JavaScript.
 ->  the document object represents the loaded HTML document and provides methods to interact with its content.
 
 Properties of the window:
 -------------------------
1)Closed: It holds a Boolean value that represents whether the window is closed or not.
2)console: It returns a reference to the console object which provides access to the browser’s debugging console.
3)defaultStatus: It is used to define the default message that will be displayed in the status bar when no activity is carried on by the browser.
4)controllers: It returns the XUL controller objects for the current Chrome window.
5)customElements: It returns a reference to the CustomElementRegistry object, which can be used to register new custom elements and also get information about already registered custom elements.
6)crypto: It returns the browser crypto object.
7)devicePixelRatio: It returns the ratio between physical pixels and device-independent pixels in the current display.
8)Document: It returns a reference to the document object of that window.
9)DOMMatrix: It returns a reference to a DOMMatrix object, which represents 4×4 matrices, suitable for 2D and 3D operations.
10)frames[]: It represents an array that contains all the frames of a given window.
11)DOMPoint: It returns a reference to a DOMPoint object, which represents a 2D or 3D point in a coordinate system.
12)History: It provides information on the URLs visited in the current window.
13)Length: It represents the number of frames in the current window.

Methods of Window:
------------------
Syntax:

window.method_name;

The methods of Window objects that are commonly used are listed in the below table:

1)alert(): It is used to display an alert box. It displays a specified message along with an OK button and is generally used to make sure that the information comes through the user.
2)atob(): It is used for decoding a base-64 encoded string. It is used to decode a string of data that has been encoded using the btoa() method.
3)blur(): It is used to remove focus from the current window.
4)btoa(): It is used for encoding a string in base-64 format.
5)clearInterval(): It clears the interval which has been set by the setInterval() function before that.
6)clearTimeout(): It clears the timeout which has been set by the setTimeout()function before that.
7)close(): It is used for closing a certain window or tab of the browser which was previously opened.
8)confirm(): It is used to display a modal dialog with an optional message and two buttons i.e. OK and Cancel. It returns true if the user clicks “OK”, and false otherwise.
9)focus(): It is used to give focus to an element in the current window.
10)getComputedStyle(): It is used to get all the computed CSS properties and values of the specified element.
11)getSelection(): It returns a Selection object representing the range of text selected by the user

